SELECT
	ci.cst_id,
	ci.cst_key,
	ci.cst_firstname,
	ci.cst_lastname,
	ci.cst_marital_status,
	ci.cst_gndr,
	ci.cst_create_date,
	ca.bdate,
	ca.gen,
	la.cntry
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid;



--- to find duplicates
select 
cst_id,
count(*)
from (SELECT
	ci.cst_id,
	ci.cst_key,
	ci.cst_firstname,
	ci.cst_lastname,
	ci.cst_marital_status,
	ci.cst_gndr,
	ci.cst_create_date,
	ca.bdate,
	ca.gen,
	la.cntry
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid
)t
group by cst_id
having count(*) >1

---Data intergration
SELECT
	ci.cst_gndr,
	ca.gen
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid
order by 1, 2


SELECT
	ci.cst_gndr,
	ca.gen,
	case 
		when ci.cst_gndr != 'n/a' then ci.cst_gndr    --CRM is the master table for gender info
		else coalesce(ca.gen, 'n/a')
	end as new_gen
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid
order by 1, 2



SELECT
	ci.cst_id,
	ci.cst_key,
	ci.cst_firstname,
	ci.cst_lastname,
	ci.cst_marital_status,
	case 
		when ci.cst_gndr != 'n/a' then ci.cst_gndr    --CRM is the master table for gender info
		else coalesce(ca.gen, 'n/a')
	end as new_gen,
	ci.cst_create_date,
	ca.bdate,
	la.cntry
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid;


-- give relavant names to the column
SELECT
	ci.cst_id as customer_id,
	ci.cst_key as customer_number,
	ci.cst_firstname as first_name,
	ci.cst_lastname as last_name,
	la.cntry as country,
	ci.cst_marital_status as marital_status,
	case 
		when ci.cst_gndr != 'n/a' then ci.cst_gndr    --CRM is the master table for gender info
		else coalesce(ca.gen, 'n/a')
	end as gender,
	ca.bdate as birthdate,
	ci.cst_create_date as create_date
	
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid;
Go

-- Create surrogate key

SELECT
	ROW_NUMBER() over (order by cst_id) as customer_key,  --Surrogate key
	ci.cst_id as customer_id,
	ci.cst_key as customer_number,
	ci.cst_firstname as first_name,
	ci.cst_lastname as last_name,
	la.cntry as country,
	ci.cst_marital_status as marital_status,
	case 
		when ci.cst_gndr != 'n/a' then ci.cst_gndr    --CRM is the master table for gender info
		else coalesce(ca.gen, 'n/a')
	end as gender,
	ca.bdate as birthdate,
	ci.cst_create_date as create_date
	
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid;
Go


Create view gold.dim_customers as
SELECT
	ROW_NUMBER() over (order by cst_id) as customer_key,  --Surrogate key
	ci.cst_id as customer_id,
	ci.cst_key as customer_number,
	ci.cst_firstname as first_name,
	ci.cst_lastname as last_name,
	la.cntry as country,
	ci.cst_marital_status as marital_status,
	case 
		when ci.cst_gndr != 'n/a' then ci.cst_gndr    --CRM is the master table for gender info
		else coalesce(ca.gen, 'n/a')
	end as gender,
	ca.bdate as birthdate,
	ci.cst_create_date as create_date
	
from silver.crm_cust_info ci
left join silver.erp_cust_az12 ca
on       ci.cst_key = ca.cid
left join silver.erp_loc_a101 la
on       ci.cst_key = la.cid;
Go

select  distinct gender from gold.dim_customers;

