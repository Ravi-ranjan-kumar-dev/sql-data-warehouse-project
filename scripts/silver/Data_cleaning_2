-- Check for nulls or duplicates in primary key
-- Expectation: No Result
use DataWarehouse;
go

select * from DataWarehouse.bronze.crm_prd_info;

select
prd_id,
count(*)
from bronze.crm_prd_info
group by prd_id
having count(*) > 1 or prd_id is null

select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info
where Replace(SUBSTRING(prd_key, 1, 5), '-', '_') Not in (select distinct id from bronze.erp_px_cat_g1v2);


select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info;

select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info
where SUBSTRING(prd_key, 7, len(prd_key)) not in 
(select sls_prd_key from bronze.crm_sales_details)


select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info
where SUBSTRING(prd_key, 7, len(prd_key)) in
(select sls_prd_key from bronze.crm_sales_details);

select * from bronze.crm_prd_info;

select 
prd_nm
from bronze.crm_prd_info
where prd_nm != TRIM(prd_nm);

select 
prd_cost
from bronze.crm_prd_info
where prd_cost < 0 or prd_cost is null

select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info;

select distinct(prd_line) from bronze.crm_prd_info;

-- Handling prd_line column
select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
case
	when upper(Trim(prd_line)) = 'M' then 'Mountain'
	when upper(Trim(prd_line)) = 'R' then 'Road'
	when upper(Trim(prd_line)) = 'S' then 'Other Sales'
	when upper(Trim(prd_line)) = 'T' then 'Touring'
	Else 'n/a'
end As prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info;

-- Case statement in short term
select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
case upper(Trim(prd_line))
	when 'M' then 'Mountain'
	when 'R' then 'Road'
	when 'S' then 'Other Sales'
	when 'T' then 'Touring'
	Else 'n/a'
end As prd_line,
prd_start_dt,
prd_end_dt
from bronze.crm_prd_info;


-- check for invalid date orders
select * from bronze.crm_prd_info
where prd_end_dt < prd_start_dt

select 
prd_id,
prd_key,
prd_nm,
prd_start_dt,
LEAD(prd_start_dt) over(partition by prd_key order by prd_start_dt) -1 as prd_end_dt_test
from bronze.crm_prd_info
where prd_key in ('AC-HE-HL-U509-R', 'AC-HE-HL-U509')



select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
case upper(Trim(prd_line))
	when 'M' then 'Mountain'
	when 'R' then 'Road'
	when 'S' then 'Other Sales'
	when 'T' then 'Touring'
	Else 'n/a'
end As prd_line,
prd_start_dt,
LEAD(prd_start_dt) over(partition by prd_key order by prd_start_dt) -1 as prd_end_dt_test
from bronze.crm_prd_info;



select
prd_id,
prd_key,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
case upper(Trim(prd_line))
	when 'M' then 'Mountain'
	when 'R' then 'Road'
	when 'S' then 'Other Sales'
	when 'T' then 'Touring'
	Else 'n/a'
end As prd_line,
cast(prd_start_dt as date) as prd_start_dt,
cast(LEAD(prd_start_dt) over(partition by prd_key order by prd_start_dt) -1 as date) as prd_end_dt_test
from bronze.crm_prd_info;

-- Inser the data

insert into silver.crm_prd_info (
	prd_id,
	cat_id,
	prd_key,
	prd_nm,
	prd_cost, 
	prd_line,
	prd_start_dt, 
	prd_end_dt
)
select
prd_id,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
case upper(Trim(prd_line))
	when 'M' then 'Mountain'
	when 'R' then 'Road'
	when 'S' then 'Other Sales'
	when 'T' then 'Touring'
	Else 'n/a'
end As prd_line,
cast(prd_start_dt as date) as prd_start_dt,
cast(LEAD(prd_start_dt) over(partition by prd_key order by prd_start_dt) -1 as date) as prd_end_dt
from bronze.crm_prd_info;



-- Quality checks
-- Check for nulls or Duplicate in Primary key
-- Expectation: No result

select * from silver.crm_prd_info;

select 
prd_id,
count(*)
from silver.crm_prd_info
group by prd_id
having count(*) >1 or prd_id is null

-- Check for unwanted spaces
-- Expectation: No result

select prd_key
from silver.crm_prd_info
where prd_key != TRIM(prd_key)

select prd_nm
from silver.crm_prd_info
where prd_nm != TRIM(prd_nm)


-- Check for nulls and negative numbers
-- Expectation: no results

select 
prd_cost
from silver.crm_prd_info
where prd_cost < 0 or prd_cost is null;

-- Data standardization & Consistency
Select distinct prd_line
from silver.crm_prd_info

select * from silver.crm_prd_info;
