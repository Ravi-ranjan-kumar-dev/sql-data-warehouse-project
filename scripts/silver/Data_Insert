use DataWarehouse;



Print '>> Truncating Table: silver.crm_cust_info';
Truncate Table silver.crm_cust_info;
Print '>> Inserting Data Into: silver.crm_cust_info';

Insert into silver.crm_cust_info (
	cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date)

select 
cst_id,
cst_key,
trim(cst_firstname),
trim(cst_lastname),
case
	when upper(trim(cst_marital_status)) = 'S' then 'Single'
	when upper(trim(cst_marital_status)) = 'M' then 'Married'
	else 'n/a'
end cst_marital_status,
case
	when upper(trim(cst_gndr)) = 'M' then 'Male'
	when upper(trim(cst_gndr)) = 'F' then 'Female'
	else 'n/a'
end cst_gndr,
cst_create_date 
from (
	select
	*,
	ROW_NUMBER() over(partition by cst_id order by cst_create_date desc) as flag_last
	from bronze.crm_cust_info) t
where flag_last = 1 and cst_id is not null;
Go



Print '>> Truncating Table: silver.crm_prd_info';
Truncate Table silver.crm_prd_info;
Print '>> Inserting Data Into: silver.crm_prd_info';

insert into silver.crm_prd_info (
	prd_id,
	cat_id,
	prd_key,
	prd_nm,
	prd_cost, 
	prd_line,
	prd_start_dt, 
	prd_end_dt
)
select
prd_id,
replace(SUBSTRING(prd_key, 1, 5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as prd_key,
prd_nm,
isnull(prd_cost, 0) prd_cost,
case upper(Trim(prd_line))
	when 'M' then 'Mountain'
	when 'R' then 'Road'
	when 'S' then 'Other Sales'
	when 'T' then 'Touring'
	Else 'n/a'
end As prd_line,
cast(prd_start_dt as date) as prd_start_dt,
cast(LEAD(prd_start_dt) over(partition by prd_key order by prd_start_dt) -1 as date) as prd_end_dt
from bronze.crm_prd_info;
Go


Print '>> Truncating Table: silver.crm_sales_details';
Truncate Table silver.;
Print '>> Inserting Data Into: silver.crm_sales_details';

Insert into silver.crm_sales_details (
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price
)

SELECT
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	case
		when sls_order_dt = 0 or LEN(sls_order_dt) != 8 then null
		else cast(cast(sls_order_dt as varchar) as date)
	end as sls_order_dt,
	case
		when sls_ship_dt = 0 or LEN(sls_ship_dt) != 8 then null
		else cast(cast(sls_ship_dt as varchar) as date)
	end as sls_ship_dt,
	case
		when sls_due_dt = 0 or LEN(sls_due_dt) != 8 then null
		else cast(cast(sls_due_dt as varchar) as date)
	end as sls_due_dt,
	case
		when sls_sales is null or sls_sales <= 0 or sls_sales != sls_quantity * ABS(sls_price) then sls_quantity * ABS(sls_price)
		else sls_sales
	end as sls_sales,
	sls_quantity,
	case
		when sls_price is null or sls_price <= 0 then sls_sales/nullif(sls_quantity, 0)
		else sls_price
	end as sls_price
FROM bronze.crm_sales_details;
Go



Print '>> Truncating Table: silver.erp_cust_az12';
Truncate Table silver.;
Print '>> Inserting Data Into: silver.erp_cust_az12';

insert into silver.erp_cust_az12 (
	cid,
	bdate,
	gen
)
select 
	case
		when cid like 'NAS%' then SUBSTRING(cid, 4, len(cid))
		else cid
	end as cid,         -- Remove NAS prefix if present
	case
		when bdate > GETDATE() then null
		else bdate
	end as bdate,       -- Set future birthdates to null
	case
		when upper(trim(gen)) in ('F', 'Female') then 'Female'
		when upper(trim(gen)) in ('M', 'Male') then 'Male'
		else 'n/a'		-- Normalize the gender values and handle undknown cases
	end as gen
from bronze.erp_cust_az12;
Go


Print '>> Truncating Table: silver.erp_loc_a101';
Truncate Table silver.;
Print '>> Inserting Data Into: silver.erp_loc_a101';

Insert into silver.erp_loc_a101
	(
	cid, 
	cntry
	)
select
Replace(cid, '-', '') as cid,
case
	when trim(cntry) = 'DE' then 'Germany'
	when trim(cntry) in ('US', 'USA') then 'United States'
	when trim(cntry) = '' or cntry is null then 'n/a'
	else trim(cntry)
end as cntry       -- Normalize and handle missing or blank country codes
from bronze.erp_loc_a101;
Go



Print '>> Truncating Table: silver.erp_px_cat_g1v2';
Truncate Table silver.;
Print '>> Inserting Data Into: silver.erp_px_cat_g1v2';

insert into silver.erp_px_cat_g1v2
	(
	id, 
	cat, 
	subcat, 
	maintenance
	)
select
id,
cat,
subcat,
maintenance
from bronze.erp_px_cat_g1v2;
Go
