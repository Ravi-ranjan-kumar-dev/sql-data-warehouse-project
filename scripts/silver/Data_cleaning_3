use DataWarehouse;

SELECT TOP (1000) [sls_ord_num]
      ,[sls_prd_key]
      ,[sls_cust_id]
      ,[sls_order_dt]
      ,[sls_ship_dt]
      ,[sls_due_dt]
      ,[sls_sales]
      ,[sls_quantity]
      ,[sls_price]
	FROM [DataWarehouse].[bronze].[crm_sales_details]
	-- where sls_ord_num != TRIM(sls_ord_num)
	-- where sls_prd_key not in (select prd_key from silver.crm_prd_info)
	-- where sls_prd_key != trim(sls_prd_key)
	-- where sls_cust_id  in (select cst_id from silver.crm_cust_info)

	select * from bronze.crm_sales_details;

	-- Check for invalid dates
	select 
	Nullif(sls_order_dt, 0) sls_order_dt 
	from bronze.crm_sales_details
	where sls_order_dt <= 0 
	or LEN(sls_order_dt) != 8 
	or sls_order_dt > 20500101 
	or sls_order_dt < 19000101;

select 
	Nullif(sls_ship_dt, 0) sls_order_dt 
from bronze.crm_sales_details
where sls_ship_dt <= 0 
	or LEN(sls_ship_dt) != 8 
	or sls_ship_dt > 20500101 
	or sls_ship_dt < 19000101;

select 
	Nullif(sls_due_dt, 0) sls_order_dt 
from bronze.crm_sales_details
where sls_due_dt <= 0 
	or LEN(sls_due_dt) != 8 
	or sls_due_dt > 20500101 
	or sls_due_dt < 19000101;


SELECT
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	case
		when sls_order_dt = 0 or LEN(sls_order_dt) != 8 then null
		else cast(cast(sls_order_dt as varchar) as date)
	end as sls_order_dt,
	case
		when sls_ship_dt = 0 or LEN(sls_ship_dt) != 8 then null
		else cast(cast(sls_ship_dt as varchar) as date)
	end as sls_ship_dt,
	case
		when sls_due_dt = 0 or LEN(sls_due_dt) != 8 then null
		else cast(cast(sls_due_dt as varchar) as date)
	end as sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price
FROM bronze.crm_sales_details


-- Check for invalid date orders
select * from bronze.crm_sales_details
where sls_order_dt > sls_ship_dt or sls_order_dt > sls_due_dt;


-- Check data consistency: Between sales, Quantity, and price
-->> Sales = Quantity * price
-->> Values must not be null, Zero, or Negative.
select distinct
sls_sales,
sls_quantity,
sls_price
from bronze.crm_sales_details
where sls_sales != sls_quantity *sls_price
		or sls_sales is null or sls_quantity is null or sls_price is null
		or sls_sales <= 0 or sls_quantity <= 0 or sls_price <= 0
order by sls_sales, sls_quantity, sls_price;


select distinct
sls_sales as old_sls_sales,
case
	when sls_sales is null or sls_sales <= 0 or sls_sales != sls_quantity * ABS(sls_price) then sls_quantity * ABS(sls_price)
	else sls_sales
end as sls_sales,
sls_quantity,
sls_price as old_sls_price,
case
	when sls_price is null or sls_price <= 0 then sls_sales/nullif(sls_quantity, 0)
	else sls_price
end as sls_price
from bronze.crm_sales_details
where sls_sales != sls_quantity *sls_price
		or sls_sales is null or sls_quantity is null or sls_price is null
		or sls_sales <= 0 or sls_quantity <= 0 or sls_price <= 0
order by sls_sales, sls_quantity, sls_price;


SELECT
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	case
		when sls_order_dt = 0 or LEN(sls_order_dt) != 8 then null
		else cast(cast(sls_order_dt as varchar) as date)
	end as sls_order_dt,
	case
		when sls_ship_dt = 0 or LEN(sls_ship_dt) != 8 then null
		else cast(cast(sls_ship_dt as varchar) as date)
	end as sls_ship_dt,
	case
		when sls_due_dt = 0 or LEN(sls_due_dt) != 8 then null
		else cast(cast(sls_due_dt as varchar) as date)
	end as sls_due_dt,
	case
		when sls_sales is null or sls_sales <= 0 or sls_sales != sls_quantity * ABS(sls_price) then sls_quantity * ABS(sls_price)
		else sls_sales
	end as sls_sales,
	sls_quantity,
	case
		when sls_price is null or sls_price <= 0 then sls_sales/nullif(sls_quantity, 0)
		else sls_price
	end as sls_price
FROM bronze.crm_sales_details




Insert into silver.crm_sales_details (
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	sls_order_dt,
	sls_ship_dt,
	sls_due_dt,
	sls_sales,
	sls_quantity,
	sls_price
)

SELECT
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	case
		when sls_order_dt = 0 or LEN(sls_order_dt) != 8 then null
		else cast(cast(sls_order_dt as varchar) as date)
	end as sls_order_dt,
	case
		when sls_ship_dt = 0 or LEN(sls_ship_dt) != 8 then null
		else cast(cast(sls_ship_dt as varchar) as date)
	end as sls_ship_dt,
	case
		when sls_due_dt = 0 or LEN(sls_due_dt) != 8 then null
		else cast(cast(sls_due_dt as varchar) as date)
	end as sls_due_dt,
	case
		when sls_sales is null or sls_sales <= 0 or sls_sales != sls_quantity * ABS(sls_price) then sls_quantity * ABS(sls_price)
		else sls_sales
	end as sls_sales,
	sls_quantity,
	case
		when sls_price is null or sls_price <= 0 then sls_sales/nullif(sls_quantity, 0)
		else sls_price
	end as sls_price
FROM bronze.crm_sales_details;
